消息队列

# 选型

- **优先 RocketMQ**：需要事务消息、高吞吐且对顺序有要求的场景（如分布式事务系统）。
- **优先 RabbitMQ**：需要低延迟、复杂路由或协议兼容性（如企业级微服务通信）。
- **优先 Kafka**：大数据处理、日志聚合或流式计算场景（如实时数仓）。

#### **1. RabbitMQ**：吞吐量不如其他

- 优点：

  - **灵活路由**：支持多种交换机模式（直连、主题、扇出等），适合复杂路由逻辑（如通知系统）。
  - **低延迟**：erlang语言编写，实时消息处理能力强，延迟可低至微秒级。

- 

  缺点：

  - **吞吐瓶颈**：单集群吞吐量通常在万级，扩展需镜像队列，性能损耗较大。
  - **数据规模**：海量消息堆积时性能下降明显，适合中小规模场景。

#### **2. RocketMQ：性能不如kafka** ‘

- 优点：
  - **超高吞吐**：单集群可达百万级 TPS，适合日志采集、大数据管道（如 Flink 流处理）。
  - **持久化存储**：支持长期存储（如 TB 级数据），副本机制保障高可用。
- 缺点：
  - **功能简单**

#### 3. kafka:选用





#### 消息队列的问题：



####  消息丢失了怎么办？

#### 怎么保证消息的可靠性？

#### 消息重复消费了怎么办？

#### 如何保证消息的幂等性？

#### 消息积压了怎么办？









